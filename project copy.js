// src/
// ├── api/                   # API 服務層：所有與後端通訊的邏輯
// │   └── apiService.js      # 封裝了對後端 API 的各種 HTTP 請求（GET, POST, PUT, DELETE）。
//                            # 第一性原理：負責前端與後端「數據傳輸」的管道。
//                            # 對其他模塊影響：所有模塊的數據操作都需通過此層。
// ├── assets/                # 靜態資源：圖片、字體等。
// ├── components/            # 通用 UI 組件：可在多個模塊中重複使用，不包含特定業務邏輯。
// │   ├── ConfirmationModal.js # 確認彈窗：用於刪除等敏感操作前的二次確認。
// │   │                        # 第一性原理：提供「行為確認」的基本 UI。
// │   │                        # 對其他模塊影響：提供通用的刪除確認機制，保障數據安全。
// │   └── MessageDisplay.js    # 訊息顯示組件：用於顯示成功、錯誤、資訊提示。
// │                            # 第一性原理：提供「狀態反饋」的基本 UI。
// │                            # 對其他模塊影響：所有需要向用戶顯示操作結果的模塊都會使用。
// ├── contexts/              # React Context API：用於全局狀態管理。
//                            # 第一性原理：提供「全局狀態共享」的機制，避免 props drilling。
//                            # 對其他模塊影響：用於管理如身份驗證狀態、全局載入狀態、消息提示狀態等。
// ├── data/                  # 靜態數據或 Mock 數據。
// ├── hooks/                 # 自定義 React Hooks：封裝可重用的邏輯。
// │   └── useTuitionData.js  # 自定義 Hook，可能封裝了獲取、更新、刪除補習班數據的通用邏輯，
// │                          # 並處理 loading 狀態和錯誤。
// │                          # 第一性原理：抽象化「數據存取」的通用模式，提高代碼復用性。
// │                k 簡化邏輯。
// ├── layout/                # 頁面佈局組件：定義了應用程序的整體視覺結構，如導航欄、側邊欄、頁腳等。          # 對其他模塊影響：所有需要與後端交互的模塊都可以使用此 Hoo
//                            # 第一性原理：定義「界面結構」的容器。
// ├── modules/               # 核心業務模塊：每個目錄代表一個主要功能區域。

// │   ├── calendar/          # 日曆模塊：管理課程會話的日期視圖和點名。
// │   │   ├── CalendarOverviewPage.js      # 日曆總覽頁面：顯示月曆，標記課程日期。
// │   │   │                                # 模塊功能：
// │   │   │                                # - 顯示一個月份的日曆。
// │   │   │                                # - 導航月份（上一個月、下一個月）。
// │   │   │                                # - 在日曆上標記出有課程的日期（已排課、已順延）。
// │   │   │                                # 數據/操作影響：
// │   │   │                                # - **讀取 `sessions` 數據**：按日期範圍獲取會話信息以標記日曆。
// │   │   │                                # - **觸發 `DailySessionsAttendanceModal`**：點擊日期開啟模態框。
// │   │   └── DailySessionsAttendanceModal.js # 每日課程點名模態框：顯示特定日期的所有課程，提供點名入口。
// │   │                                       # 模塊功能：
// │   │                                       # - 顯示選定日期所有排定的課程及其概況（點名統計：已到、請假、未到、順延）。
// │   │                                       # - 可進一步點擊「開始點名」按鈕，打開 `SessionAttendanceModal` 進行詳細點名。
// │   │                                       # 數據/操作影響：
// │   │                                       # - **讀取 `sessions` 數據**：按日期過濾會話。
// │   │                                       # - **計算統計**：根據 `attendance` JSONB 數據計算出勤人數。
// │   │                                       # - **觸發 `SessionAttendanceModal`**。

// │   ├── classes/           # 課程管理模塊：所有與課程相關的 CRUD 和特殊操作。
// │   │   ├── ClassCalendarModal.js        # 調整課程日期模態框：以日曆形式調整課程會話。
// │   │   │                                # 模塊功能：
// │   │   │                                # - 顯示該課程的已排定會話日期。
// │   │   │                                # - 自由增減排課日期（點擊空白日期新增，點擊已排定日期取消）。
// │   │   │                                # - **課程順延功能**：選定未來課程標記「順延」，系統自動在後續找到補課日期。
// │   │   │                                # - **取消順延功能**：恢復已順延課程為「未到」狀態。
// │   │   │                                # 數據/操作影響：
// │   │   │                                # - **讀取 `classes` 和 `sessions` 數據**。
// │   │   │                                # - **更新 `sessions` 數據**：新增、刪除或修改會話日期，更新 `attendance` 狀態。
// │   │   │                                # - **可能影響 `total_sessions` 和 `end_date`** (若課程順延導致實際結束日期改變)。
// │   │   │                                # - **觸發後端 `update_class` 或專門的 `update_sessions` API**。
// │   │   ├── ClassForm.js                   # 課程表單：用於新增和編輯課程。
// │   │   │                                # 模塊功能：
// │   │   │                                # - 收集課程名稱、主課老師、描述、開始日期、上課星期、總堂數、學費金額和繳費期數等信息。
// │   │   │                                # - 輸入驗證。
// │   │   │                                # 數據/操作影響：
// │   │   │                                # - **提供 `ClassCreate` 或 `ClassUpdate` Pydantic 模型數據**給 `ClassManagementPage`。
// │   │   ├── ClassManagementPage.js         # 課程管理主頁：顯示課程列表，處理增刪改查。
// │   │   │                                # 模塊功能：
// │   │   │                                # - 顯示所有課程的詳細資訊。
// │   │   │                                # - **新增課程**：提交 `ClassForm` 數據。
// │   │   │                                # - **編輯課程**：載入數據到 `ClassForm`，提交更新。
// │   │   │                                # - **刪除課程**：調用 `ConfirmationModal`，然後執行刪除。
// │   │   │                                # - 觸發 `ClassCalendarModal` 和 `EnrolledStudentsModal`。
// │   │   │                                # 數據/操作影響：
// │   │   │                                # - **讀取/創建/更新/刪除 `classes` 數據**。
// │   │   │                                # - **創建/更新 `classes` 時，會觸發後端自動生成 `sessions` 和 `transactions`**。
// │   │   │                                # - **刪除 `classes` 時，會觸發後端級聯刪除相關 `sessions` 和 `transactions`**。
// │   │   │                                # - 更新後端 `Class` 的 `enrolled_students` 字段。
// │   │   └── EnrolledStudentsModal.js       # 已報名學生模態框：顯示和管理課程的報名學生。
// │   │                                       # 模塊功能：
// │   │                                       # - 顯示已報名該課程的所有學生列表。
// │   │                                       # - **移除報名**：單獨對學生進行移除操作。
// │   │                                       # - **為課程報名學生**：允許為課程選擇多位學生進行批量報名。
// │   │                                       # 數據/操作影響：
// │   │                                       # - **讀取 `classes` (enrolled_students) 和 `students` 數據**。
// │   │                                       # - **更新 `classes` 數據**：增減 `enrolled_students` 列表。
// │   │                                       # - **移除報名時，後端會更新課程的 enrolledStudents 列表，並移除該學生在此課程中的所有會話點名記錄和所有未繳費記錄。**
// │   │                                       # - **批量報名時，後端會為新報名的學生自動生成該課程的繳費記錄，並自動更新相關課程的會話點名記錄。**


// │   ├── common/            # 通用功能模塊：跨多個主要業務領域的共享功能。
// │   │   ├── HistoryClassesPage.js        # 歷史課程頁面：顯示所有已結束的課程會話。
// │   │   │                                # 模塊功能：
// │   │   │                                # - 顯示所有已結束的課程會話列表，按日期降序排列。
// │   │   │                                # - 詳細列出每堂歷史課程的點名概況（已到、請假、未到、順延）。
// │   │   │                                # 數據/操作影響：
// │   │   │                                # - **讀取 `sessions` 數據**：過濾已結束日期的會話。
// │   │   │                                # - 可能需要**聚合 `sessions` 的 `attendance` 數據**以顯示統計。
// │   │   ├── SessionAttendanceModal.js      # 會話點名模態框：進行單次課程會話的詳細點名。
// │   │   │                                # 模塊功能：
// │   │   │                                # - 列出該課程會話所有報名學生及其當前點名狀態。
// │   │   │                                # - 允許為每個學生選擇「未到」、「已到」或「請假」狀態。
// │   │   │                                # - 記錄實際授課老師。
// │   │   │                                # 數據/操作影響：
// │   │   │                                # - **讀取 `sessions` 數據**（特定會話）。
// │   │   │                                # - **更新 `sessions` 的 `attendance` JSONB 字段**。
// │   │   │                                # - **更新 `sessions` 的 `actual_teacher` 字段**。
// │   │   ├── StudentSummaryModal.js         # 學生課程總覽模態框：顯示學生的課程及出缺席詳情。
// │   │   │                                # 模塊功能：
// │   │   │                                # - 顯示學生所報名的所有課程及其上課期間、學費、已繳金額和未繳金額。
// │   │   │                                # - 詳細列出該學生在每堂課程的會話日期及出缺席狀態。
// │   │   │                                # - **允許直接修改每堂課的出缺席狀態。**
// │   │   │                                # - 提供列印學生課程總覽的功能。
// │   │   │                                # 數據/操作影響：
// │   │   │                                # - **讀取 `students`、`classes` 和 `sessions` 數據**：用於顯示報名課程和點名詳情。
// │   │   │                                # - **讀取 `transactions` 數據**：用於計算繳費總額。
// │   │   │                                # - **更新 `sessions` 的 `attendance` JSONB 字段**（修改出缺席狀態）。


// │   ├── finance/           # 財務管理模塊：所有與交易、繳費相關的功能。
// │   │   ├── CombinedPaymentPrintModal.js # 綜合繳費通知書與明細模態框：用於列印綜合繳費文件。
// │   │   │                                # 模塊功能：
// │   │   │                                # - 為特定學生和課程生成綜合的繳費通知書與繳費明細。
// │   │   │                                # 數據/操作影響：
// │   │   │                                # - **讀取 `students`、`classes` 和 `transactions` 數據**。
// │   │   ├── FinanceManagementPage.js       # 財務管理主頁：顯示財務概覽和交易列表。
// │   │   │                                # 模塊功能：
// │   │   │                                # - 顯示本月已收款項總額、本月應收款項總額。
// │   │   │                                # - 列出本月所有未繳費的學生及其詳細繳費項目。
// │   │   │                                # - 顯示所有已繳費/未繳費/逾期記錄列表。
// │   │   │                                # - 提供列印所有繳費通知/所有收據的功能。
// │   │   │                                # 數據/操作影響：
// │   │   │                                # - **讀取 `transactions` 數據**：可能需要按日期、狀態過濾和聚合。
// │   │   │                                # - **讀取 `students` 和 `classes` 數據**：用於關聯顯示。
// │   │   ├── FinancialDashboard.js          # 財務儀表板組件：顯示本月收入/應收概覽。
// │   │   │                                # 模塊功能：
// │   │   │                                # - 顯示本月已收款項總額。
// │   │   │                                # - 顯示本月應收款項總額。
// │   │   │                                # - 列出本月所有未繳費的學生及其詳細繳費項目。
// │   │   │                                # 數據/操作影響：
// │   │   │                                # - **讀取 `transactions` 數據**：需要複雜的查詢和聚合操作。
// │   │   ├── PaymentNoticeModal.js          # 繳費通知單模態框：用於列印單筆或多筆繳費通知。
// │   │   │                                # 模塊功能：
// │   │   │                                # - 為單筆未繳費交易生成並列印繳費通知。
// │   │   │                                # - 對月繳課程，會列印該學生該課程後續的幾期繳費。
// │   │   │                                # 數據/操作影響：
// │   │   │                                # - **讀取 `transactions` 數據**。
// │   │   ├── ReceiptModal.js                # 繳費收據模態框：用於列印單筆或多筆收據。
// │   │   │                                # 模塊功能：
// │   │   │                                # - 為單筆已繳費交易生成並列印收據。
// │   │   │                                # 數據/操作影響：
// │   │   │                                # - **讀取 `transactions` 數據`**。



// │   ├── students/          # 學生管理模塊：所有與學生相關的 CRUD 和特殊操作。
// │   │   ├── StudentForm.js                 # 學生表單：用於新增和編輯學生。
// │   │   │                                # 模塊功能：
// │   │   │                                # - 收集學生姓名、年齡、年級、學校、電話、生日和目前班級等資訊。
// │   │   │                                # - 輸入驗證。
// │   │   │                                # 數據/操作影響：
// │   │   │                                # - **提供 `StudentCreate` 或 `StudentUpdate` Pydantic 模型數據**給 `StudentManagementPage`。
// │   │   ├── StudentManagementPage.js       # 學生管理主頁：顯示學生列表，處理增刪改查。
// │   │   │                                # 模塊功能：
// │   │   │                                # - 顯示所有學生的詳細資訊。
// │   │   │                                # - **新增學生**：提交 `StudentForm` 數據。
// │   │   │                                # - **編輯學生**：載入數據到 `StudentForm`，提交更新。
// │   │   │                                # - **刪除學生**：調用 `ConfirmationModal`，然後執行刪除。
// │   │   │                                # - 觸發 `StudentPaymentModal` 和 `StudentSummaryModal`。
// │   │   │                                # 數據/操作影響：
// │   │   │                                # - **讀取/創建/更新/刪除 `students` 數據**。
// │   │   │                                # - **刪除 `students` 時，會觸發後端級聯刪除該學生在所有課程中的報名、所有課程會話中的點名記錄，以及所有的繳費記錄。**
// │   │   └── StudentPaymentModal.js         # 學生繳費模態框：顯示和管理學生的繳費記錄。
// │                                           # 模塊功能：
// │   │                                       # - 顯示該學生所有課程的繳費記錄。
// │   │                                       # - **標記為「已繳費」或「未繳費」**。
// │   │                                       # - 提供單筆收據/繳費通知列印。
// │   │                                       # 數據/操作影響：
// │   │                                       # - **讀取 `transactions` 數據**：按學生 ID 過濾。
// │   │                                       # - **更新 `transactions` 數據**：修改繳費狀態和記錄日期。



// │   ├── utils/             # 通用工具函數：如日期格式化、數據轉換等。
// │   ├── App.js             # 應用程式主入口組件：通常負責路由配置和全局上下文提供。
// │   ├── index.css          # 全局樣式表。
// │   └── index.js           # 應用程式啟動文件。
